---
import {BibtexParser, type Entry} from "bibtex-js-parser";
import fs from 'node:fs';
import Layout from '../layouts/Layout.astro';
import Publication from '~/components/Publication.astro';
import SubPageHero from '~/components/SubpageHero.astro';
import { bgColorMap, textColorMap, groupBy, type SectionLink, type SubPageHeroProps} from "../statics"
import { type MarkdownInstance } from "astro";
import { glob } from 'glob'

const bibtex_files = await glob("src/content/publications/*.bib");
const bibtex = 
  bibtex_files
  .map(file => fs.readFileSync(file, { encoding: 'utf8', flag: 'r' }))
  .join("\n")
const bibJSON = BibtexParser.parseToJSON(bibtex)
const highlightedPubsFile = (await Astro.glob("src/content/publications/_highlighted_publications.md"))[0];
const highlightedCiteKeys: string [] = highlightedPubsFile.frontmatter.highlightedCiteKeys;

const highlightedPubs =
  bibJSON
  .filter(entry => highlightedCiteKeys.includes(entry.id))

const groupedPubs : [string, Entry[]][] = 
  Object.entries(
    groupBy(bibJSON, (pub) => pub.year ? pub.year : "unknown")
  )
  .sort(([a], [b]) => 
    Number(a) - Number(b)
  )
  .reverse()

const heroProps: SubPageHeroProps = {
  title: "DataPLANT Publications",
  titleColor: "white",
  subtitle: "A selection of publications from DataPLANT participants and community",
  bgColor: "darkblue",
  textColor: "white",
  headerColor: "olive-400",
  emphasisColor: "mint-600",
  image: "",
  textPosition: "text-only"
}

const yearLinks = groupedPubs.map(([year, pubs]) => ({
  title: year,
  slug: year,
  summary: `(${pubs.length})`
}))

const heroSectionLinks: SectionLink[] = [
  {
    title: "Highlighted Publications",
    slug: "highlighted-publications",
    summary: "Core concepts and other highlights"
  },
  {
    title: "All Publications",
    slug: "all-publications",
    summary: "All publications sorted by year"
  }
]

---
<Layout title="DataPLANT - Publications">
  <div class="flex flex-col flex-grow place-content-center">
    <SubPageHero subPageHeroProps={heroProps} sectionLinks={heroSectionLinks}></SubPageHero>
    <div class="mx-auto w-full max-w-7xl pb-10 lg:py-12 lg:px-8">
      <div class="space-y-12 sm:px-6 lg:col-span-12 lg:px-0">
        <h1 id="highlighted-publications" class="title text-darkblue text-4xl mb-4 anchor p-2"><a class="anchor-link" href="#highlighted-publications">Highlighted Publications ({highlightedPubs.length})</a></h2>
        {
          highlightedPubs
          .map((pub) => (
            <Publication bibtex={pub}></Publication>
          ))
        }
        <div class="divider"></div>
          <h1 id="all-publications" class="title text-4xl mb-4 anchor p-2"><a class="anchor-link" href="#all-publications">All Publications ({bibJSON.length})</a></h2>
          <div class="flex flex-wrap gap-2">
          {
            yearLinks
            .map((link) => (
              <div class="badge md:badge-lg lg:badge-xl bg-white border-darkblue">
                <a href={"#" + link.slug} class="text-darkblue font-bold hover:text-olive-800">
                  {link.title} {link.summary}
                </a>
              </div>
            ))
          }
          </div>
          {
            groupedPubs
            .map(([year, publications]) => (
              <div>
                <h2 id={year} class="title anchor text-darkblue font-bold text-2xl mb-4 anchor p-2"><a href={"#" + year} class="anchor-link">{year} ({publications.length})</a></h2>
                {
                  publications
                  .map((pub) => (
                    <Publication bibtex={pub}>
                    </Publication>
                  ))
                }
              </div>
            ))
          }
        </div>
      </div>
    </div>
  </div>
</Layout>
