---
import { bgColorMap, textColorMap, textHoverColorMap, type SectionLink, type SubPageHeroProps } from "../statics"

const props = Astro.props.subPageHeroProps as SubPageHeroProps;
const sectionLinks = Astro.props.sectionLinks as SectionLink[]

console.log(sectionLinks)

const html: string | null = Astro.props.html

let bgColor = bgColorMap.get(props.bgColor)
let textColor = textColorMap.get(props.textColor)
let titleColor = textColorMap.get(props.titleColor)
let headerColor = textColorMap.get(props.headerColor)
let emphasisColor = textHoverColorMap.get(props.emphasisColor)

const heroClass = `hero min-h-[60vh] ${bgColor} ${textColor}`
let heroContentClass = ""
if (props.textPosition === "left") {
  heroContentClass = "hero-content flex-col lg:flex-row-reverse"
} else if (props.textPosition === "right") {
  heroContentClass = "hero-content flex-col-reverse lg:flex-row"
} else if (props.textPosition === "top") {
  heroContentClass = "hero-content flex-col"
} else if (props.textPosition === "bottom") {
  heroContentClass = "hero-content flex-col-reverse"
} else {
  heroContentClass = "hero-content flex-col lg:flex-row"
}
---

<div class={heroClass}>
  <div class="hero-content flex-col lg:flex-row">
    <img src={props.image} class="max-w-lg" />
    <!-- {
      props.image && <Image src={props.image} class="max-w-lg" alt="" inferSize/>
    } -->
  <div>
    <h1 class={`text-5xl font-bold mb-6 ${titleColor}`}>{props.title}</h1>
    <h2 class="text-xl mb-4">{props.subtitle}</h1>
    {
      sectionLinks.map((link) => (
        <div class="mb-2">
          <h3><a href={`#${link.slug}`} class={`text-xl font-bold ${headerColor} ${emphasisColor}`}># {link.title}</a></h3>
          <p class="text-base">{link.summary}</p>
        </div>
      ))
    }
  </div>

  </div>
</div>